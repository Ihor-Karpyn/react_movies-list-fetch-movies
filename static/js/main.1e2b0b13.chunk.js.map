{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getFilmByTitle","url","fetch","then","response","json","data","Response","Promise","reject","Error","film","obj","Title","Plot","Poster","imdbID","FindMovie","onAddMovie","useState","find","setFind","findError","setFindError","setFilm","findMovie","a","newFilm","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","style","visibility","disabled","onClick","App","setMovies","useEffect","films","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e2b0b13.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const baseUrl = 'https://www.omdbapi.com/?i=tt3896198&apikey=59a9b9f3';\n\nconst request = url => fetch(baseUrl + url)\n  .then(response => response.json());\n\nexport const getFilmByTitle = title => (\n  request(`&t=${title}`)\n    // eslint-disable-next-line max-len\n    .then(data => (data.Response === 'False' ? Promise.reject(data.Error) : data))\n    .then(film => normalizeFilmKey(film))\n);\n\nfunction normalizeFilmKey(obj) {\n  const baseImdbUrl = 'https://www.imdb.com/title';\n\n  return {\n    title: obj.Title,\n    description: obj.Plot,\n    imgUrl: obj.Poster,\n    imdbId: obj.imdbID,\n    imdbUrl: `${baseImdbUrl}/${obj.imdbID}`,\n  };\n}\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getFilmByTitle } from '../api/api';\n\nexport const FindMovie = ({ onAddMovie }) => {\n  const [find, setFind] = useState('');\n  const [findError, setFindError] = useState(false);\n  const [film, setFilm] = useState(null);\n\n  const findMovie = async() => {\n    try {\n      const newFilm = await getFilmByTitle(find);\n\n      setFindError(false);\n      setFilm(newFilm);\n      setFind('');\n    } catch (error) {\n      setFindError(true);\n      setFilm(null);\n    }\n  };\n\n  const findHandler = (event) => {\n    setFind(event.target.value);\n    setFindError(false);\n  };\n\n  const addMovieHandler = () => {\n    onAddMovie(film);\n    setFilm(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n            // className=\"input is-danger\"\n              className={classNames(\n                'input',\n                { 'is-danger': findError },\n              )}\n              value={find}\n              onChange={findHandler}\n            />\n          </div>\n\n          <p\n            className=\"help is-danger\"\n            style={findError ? {} : { visibility: 'hidden' }}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              disabled={!find}\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!film}\n              onClick={addMovieHandler}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {film\n        && (\n        <>\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...film} />\n        </>\n        )\n      }\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  onAddMovie: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    setMovies(data);\n  }, []);\n\n  const addMovie = (movie) => {\n    if (movies.find(film => film.imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(films => [...films, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}